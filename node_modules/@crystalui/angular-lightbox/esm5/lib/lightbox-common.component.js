/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, ViewChild, ElementRef } from '@angular/core';
import { EventService } from './event.service';
import { Utils } from './utils';
var LightboxCommonComponent = /** @class */ (function () {
    function LightboxCommonComponent(eventService) {
        this.eventService = eventService;
        this.currentImageIndex = 0;
        this.indexCurrentSlide = 1;
        this.containerStyles = {
            transition: '',
            transform: '',
            width: '',
            height: '',
            opacity: ''
        };
        this.currImageLoadingState = 'not-loaded';
        this.isMobile = Utils.mobileCheck();
    }
    Object.defineProperty(LightboxCommonComponent.prototype, "lightboxImage", {
        get: /**
         * @return {?}
         */
        function () {
            return this._lightboxImage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "lightboxImageElement", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.lightboxImage) {
                return this.lightboxImage.nativeElement;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "lightboxImageNaturalHeight", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.lightboxImageElement) {
                return this.lightboxImageElement.naturalHeight;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "lightboxImageNaturalWidth", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.lightboxImageElement) {
                return this.lightboxImageElement.naturalWidth;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "index", {
        get: /**
         * @return {?}
         */
        function () {
            return this.currentImageIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "properties", {
        get: /**
         * @return {?}
         */
        function () {
            return this.lightboxData.properties;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "images", {
        get: /**
         * @return {?}
         */
        function () {
            return this.lightboxData.images || [this.lightboxData.image];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "thumbnailImage", {
        get: /**
         * @return {?}
         */
        function () {
            return this.images[this.currentImageIndex].nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "thumbnailImagePosition", {
        get: /**
         * @return {?}
         */
        function () {
            return this.thumbnailImage.getBoundingClientRect();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "virtualImageDimension", {
        // Image size if it is larger than the window size
        get: 
        // Image size if it is larger than the window size
        /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var height = this.lightboxImageNaturalHeight;
            /** @type {?} */
            var width = height * this.imageAspectRatio;
            /** @type {?} */
            var windowWidth = document.body.clientWidth;
            /** @type {?} */
            var windowHeight = window.innerHeight;
            if (this.isImageLargerWindow) {
                if (height > windowHeight) {
                    height = windowHeight;
                    width = height * this.imageAspectRatio;
                }
                if (width > windowWidth) {
                    width = windowWidth;
                    height = width / this.imageAspectRatio;
                }
            }
            else {
                width = this.lightboxImageNaturalWidth;
                height = this.lightboxImageNaturalHeight;
            }
            if (width === 0 || Number.parseInt(height) === 0) {
                return { width: 200, height: 200 };
            }
            return { width: width, height: height };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "containerInitialPosition", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var scale = (this.showState === 'initial-thumbnail-image') ? 1 : this.containerScale;
            /** @type {?} */
            var top = this.thumbnailImagePosition.top;
            /** @type {?} */
            var left = this.thumbnailImagePosition.left;
            return 'matrix(' + scale + ', 0, 0, ' + scale + ',' + left + ',' + top + ')';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "containerFullscreenPosition", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var left = (document.body.clientWidth - this.virtualImageDimension.width) / 2;
            /** @type {?} */
            var top = (window.innerHeight - this.virtualImageDimension.height) / 2;
            return 'translate3d(' + left + 'px, ' + top + 'px, 0)';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "containerScale", {
        get: /**
         * @return {?}
         */
        function () {
            return this.thumbnailImagePosition.width / this.virtualImageDimension.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "imageAspectRatio", {
        get: /**
         * @return {?}
         */
        function () {
            return this.thumbnailImage.naturalWidth / this.thumbnailImage.naturalHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "isImageLargerWindow", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var imageNaturalWidth = this.lightboxImageNaturalWidth;
            /** @type {?} */
            var imageNaturalHeight = this.lightboxImageNaturalHeight;
            /** @type {?} */
            var windowWidth = document.body.clientWidth;
            /** @type {?} */
            var windowHeight = window.innerHeight;
            return imageNaturalWidth > windowWidth || imageNaturalHeight > windowHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "isFirstImage", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.properties.loop) {
                return false;
            }
            else {
                return this.index === 0;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "isLastImage", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.properties.loop) {
                return false;
            }
            else {
                return this.index === this.latestImageIndex;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "latestImageIndex", {
        get: /**
         * @return {?}
         */
        function () {
            return this.images.length - 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "backgroundColor", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var opacity = this.properties.backgroundOpacity;
            /** @type {?} */
            var color = this.properties.backgroundColor;
            if (color === 'black') {
                return 'rgba(0, 0, 0, ' + opacity + ')';
            }
            else {
                return 'rgba(255, 255, 255, ' + opacity + ')';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "animationDuration", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var animationDuration = this.properties.animationDuration;
            if (typeof animationDuration === "string") {
                return Number.parseInt(animationDuration);
            }
            else {
                return animationDuration;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "animationMode", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.currImageLoadingState === 'error') {
                return 'default';
            }
            return this.properties.animationMode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "animationTimingFunction", {
        get: /**
         * @return {?}
         */
        function () {
            return this.properties.animationTimingFunction;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "closeButtonText", {
        get: /**
         * @return {?}
         */
        function () {
            return this.properties.closeButtonText;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "counterSeparator", {
        get: /**
         * @return {?}
         */
        function () {
            return this.properties.counterSeparator;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LightboxCommonComponent.prototype, "counter", {
        get: /**
         * @return {?}
         */
        function () {
            return this.currentImageIndex + 1 + this.counterSeparator + this.images.length;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} type
     * @param {?} state
     * @return {?}
     */
    LightboxCommonComponent.prototype.emitState = /**
     * @param {?} type
     * @param {?} state
     * @return {?}
     */
    function (type, state) {
        if (state === 'initial-virtual-image' ||
            state === 'initial-styles') {
            return;
        }
        if (state === 'initial-default' ||
            state === 'initial-thumbnail-image') {
            state = 'initial';
        }
        this.eventService.emitChangeEvent({
            type: type + ':' + state
        });
    };
    /**
     * @param {?} state
     * @return {?}
     */
    LightboxCommonComponent.prototype.setShowState = /**
     * @param {?} state
     * @return {?}
     */
    function (state) {
        this.showState = state;
        this.emitState('show-state', state);
    };
    /**
     * @param {?} state
     * @return {?}
     */
    LightboxCommonComponent.prototype.setClosingState = /**
     * @param {?} state
     * @return {?}
     */
    function (state) {
        this.closingState = state;
        this.emitState('closing-state', state);
    };
    /**
     * @return {?}
     */
    LightboxCommonComponent.prototype.setAnimationDuration = /**
     * @return {?}
     */
    function () {
        this.hostStyleTransition = 'background-color ' + this.animationDuration + 'ms';
        this.containerStyles.transition = 'all ' + this.animationDuration + 'ms ' + this.animationTimingFunction;
    };
    /**
     * @return {?}
     */
    LightboxCommonComponent.prototype.setBackgroundColor = /**
     * @return {?}
     */
    function () {
        this.hostStyleBackgroundColor = this.backgroundColor;
    };
    /**
     * @return {?}
     */
    LightboxCommonComponent.prototype.getContainerHeight = /**
     * @return {?}
     */
    function () {
        return this.thumbnailImagePosition.height / this.containerScale + 'px';
    };
    /**
     * @return {?}
     */
    LightboxCommonComponent.prototype.showThumbnailImage = /**
     * @return {?}
     */
    function () {
        this.thumbnailImage.style.opacity = '';
    };
    /**
     * @return {?}
     */
    LightboxCommonComponent.prototype.hideThumbnailImage = /**
     * @return {?}
     */
    function () {
        this.thumbnailImage.style.opacity = 0;
    };
    /**
     * @return {?}
     */
    LightboxCommonComponent.prototype.updateThumbnailPosition = /**
     * @return {?}
     */
    function () {
        this.containerStyles.transform = this.containerInitialPosition;
    };
    LightboxCommonComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lightbox-common',
                    template: ''
                }] }
    ];
    /** @nocollapse */
    LightboxCommonComponent.ctorParameters = function () { return [
        { type: EventService }
    ]; };
    LightboxCommonComponent.propDecorators = {
        lightboxData: [{ type: Input }],
        hostStyleBackgroundColor: [{ type: HostBinding, args: ['style.backgroundColor',] }],
        hostStyleTransition: [{ type: HostBinding, args: ['style.transition',] }],
        _imageFirst: [{ type: ViewChild, args: ['imageFirst',] }],
        _imageSecond: [{ type: ViewChild, args: ['imageSecond',] }],
        _imageLast: [{ type: ViewChild, args: ['imageLast',] }],
        _lightboxImage: [{ type: ViewChild, args: ['lightboxImage',] }]
    };
    return LightboxCommonComponent;
}());
export { LightboxCommonComponent };
if (false) {
    /** @type {?} */
    LightboxCommonComponent.prototype.currentImageIndex;
    /** @type {?} */
    LightboxCommonComponent.prototype.indexCurrentSlide;
    /** @type {?} */
    LightboxCommonComponent.prototype.showState;
    /** @type {?} */
    LightboxCommonComponent.prototype.closingState;
    /** @type {?} */
    LightboxCommonComponent.prototype.containerStyles;
    /** @type {?} */
    LightboxCommonComponent.prototype.currImageLoadingState;
    /** @type {?} */
    LightboxCommonComponent.prototype.isMobile;
    /** @type {?} */
    LightboxCommonComponent.prototype.lightboxData;
    /** @type {?} */
    LightboxCommonComponent.prototype.hostStyleBackgroundColor;
    /** @type {?} */
    LightboxCommonComponent.prototype.hostStyleTransition;
    /** @type {?} */
    LightboxCommonComponent.prototype._imageFirst;
    /** @type {?} */
    LightboxCommonComponent.prototype._imageSecond;
    /** @type {?} */
    LightboxCommonComponent.prototype._imageLast;
    /** @type {?} */
    LightboxCommonComponent.prototype._lightboxImage;
    /** @type {?} */
    LightboxCommonComponent.prototype.eventService;
}
//# sourceMappingURL=data:application/json;base64,