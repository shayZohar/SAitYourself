{"version":3,"sources":["ng://@crystalui/angular-lightbox/lib/event.service.ts","ng://@crystalui/angular-lightbox/lib/utils.ts","ng://@crystalui/angular-lightbox/lib/lightbox-common.component.ts","node_modules/tslib/tslib.es6.js","ng://@crystalui/angular-lightbox/lib/lightbox.component.ts","ng://@crystalui/angular-lightbox/lib/default-properties.ts","ng://@crystalui/angular-lightbox/lib/lightbox.service.ts","ng://@crystalui/angular-lightbox/lib/lightbox.directive.ts","ng://@crystalui/angular-lightbox/lib/lightbox-group.directive.ts","ng://@crystalui/angular-lightbox/lib/lightbox.module.ts"],"names":["EventService","this","emitter","ReplaySubject","prototype","emitChangeEvent","data","next","Injectable","Utils","mobileCheck","a","check","navigator","userAgent","vendor","test","substr","LightboxCommonComponent","eventService","currentImageIndex","indexCurrentSlide","containerStyles","transition","transform","width","height","opacity","currImageLoadingState","isMobile","Object","defineProperty","_lightboxImage","lightboxImage","nativeElement","lightboxImageElement","naturalHeight","naturalWidth","lightboxData","properties","images","image","thumbnailImage","getBoundingClientRect","lightboxImageNaturalHeight","imageAspectRatio","windowWidth","document","body","clientWidth","windowHeight","window","innerHeight","isImageLargerWindow","lightboxImageNaturalWidth","Number","parseInt","scale","showState","containerScale","top","thumbnailImagePosition","left","virtualImageDimension","imageNaturalWidth","imageNaturalHeight","loop","index","latestImageIndex","length","backgroundOpacity","backgroundColor","animationDuration","animationMode","animationTimingFunction","closeButtonText","counterSeparator","emitState","type","state","setShowState","setClosingState","closingState","setAnimationDuration","hostStyleTransition","setBackgroundColor","hostStyleBackgroundColor","getContainerHeight","showThumbnailImage","style","hideThumbnailImage","updateThumbnailPosition","containerInitialPosition","Component","args","selector","template","Input","HostBinding","ViewChild","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","LightboxComponent","elementRef","ref","_this","_super","call","spinnerHeight","minTimeout","preloaderTimeout","spinnerStyles","configThumbnailPreloader","events","EventEmitter","hostShown","hideControls","__extends","__","constructor","create","tslib_1.__extends","simpleMode","path","fullImage","prevIndex","value","isFirstImage","isZoomIn","isLastImage","scrolling","onKeyDown","event","key","prev","closeLightbox","onMouseEnter","transitionEnd","propertyName","hostAnimation","ngOnInit","initialLightbox","ngAfterViewInit","setTimeout","showLightboxAnimation","onImageLoaded","initialLightboxVirtualImage","hideThumbnail","detectChanges","onImageError","initialLightboxDefault","onContainerClick","target","lightboxContainerElem","setMaxDimensions","initialLightboxThumbnailImage","containerFullscreenPosition","showLightboxAnimationEnd","closeLightboxInitial","closeLightboxAnimation","getContainerWidth","closeLightboxAnimationEnd","emit","handleLightboxTransitionEnd","maxHeight","imageMaxHeight","maxWidth","imageMaxWidth","handlePinchZoomEvents","ElementRef","ChangeDetectorRef","HostListener","DefaultProperties","counter","disable","gestureEnable","CrystalLightbox","componentFactoryResolver","appRef","injector","appendComponentToBody","component","componentRef","resolveComponentFactory","attachView","hostView","domElem","rootNodes","appendChild","subscribe","detachView","destroy","open","applyPropertieDefaults","getLightboxComponent","defaultProperties","_defaultProperties","assign","ComponentFactoryResolver","ApplicationRef","Injector","LightboxDirective","lightbox","hostLightboxGroup","globalEventsSubscription","handleGlobalEvents","closest","onClick","isGroupImage","getImage","ngOnChanges","changes","getProperties","src","prop","currentValue","Directive","Output","LightboxGroupDirective","thumbnailImages","_lightboxDirectiveList","toArray","thumbnailImageElement","getThumbnailImages","thumbnailImageIndex","getThumbnailImageIndex","undefined","thumbnailLightboxDirective","getThumbnailLightboxDirective","getImages","element","i","lightboxDirectiveList","forEach","el","push","ContentChildren","descendants","CrystalLightboxModule","NgModule","declarations","imports","CommonModule","exports","providers","bootstrap","entryComponents"],"mappings":"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","sourcesContent":["import {ReplaySubject} from 'rxjs';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class EventService {\n    emitter: ReplaySubject<any> = new ReplaySubject(1);\n\n    emitChangeEvent(data: any) {\n        this.emitter.next(data);\n    }\n}","export class Utils {\n\t\n    public static mobileCheck() {\n        var check = false;\n        (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor);\n        return check;\n    };\n}","import { Component, Input, HostBinding, ViewChild, ElementRef } from '@angular/core';\r\nimport { LightboxData, Properties } from './interfaces';\r\nimport { ShowState, ClosingState } from './types';\r\nimport { EventService } from './event.service';\r\nimport { Utils } from './utils';\r\n\r\n@Component({\r\n    selector: 'lightbox-common',\r\n    template: ''\r\n})\r\n\r\nexport class LightboxCommonComponent {\r\n\r\n    currentImageIndex: number = 0;\r\n    indexCurrentSlide = 1;\r\n    showState: ShowState;\r\n    closingState: ClosingState;\r\n    containerStyles: any = {\r\n        transition: '',\r\n        transform: '',\r\n        width: '',\r\n        height: '',\r\n        opacity: ''\r\n    };\r\n    currImageLoadingState: 'not-loaded' | 'loading' | 'uploaded' | 'error' = 'not-loaded';\r\n    isMobile: boolean;\r\n\r\n    @Input() lightboxData: LightboxData;\r\n\r\n    @HostBinding('style.backgroundColor') hostStyleBackgroundColor: string;\r\n    @HostBinding('style.transition') hostStyleTransition: string;\r\n\r\n    @ViewChild('imageFirst') _imageFirst: ElementRef;\r\n    @ViewChild('imageSecond') _imageSecond: ElementRef;\r\n    @ViewChild('imageLast') _imageLast: ElementRef;\r\n    @ViewChild('lightboxImage') _lightboxImage: ElementRef;\r\n\r\n    get lightboxImage(){\r\n        return this._lightboxImage;\r\n    }\r\n\r\n    get lightboxImageElement(){\r\n        if (this.lightboxImage){\r\n            return this.lightboxImage.nativeElement;\r\n        }\r\n    }\r\n\r\n    get lightboxImageNaturalHeight(){\r\n        if (this.lightboxImageElement){\r\n            return this.lightboxImageElement.naturalHeight;\r\n        }\r\n    }\r\n\r\n    get lightboxImageNaturalWidth(){\r\n        if (this.lightboxImageElement){\r\n            return this.lightboxImageElement.naturalWidth;\r\n        }\r\n    }\r\n\r\n    get index(){\r\n        return this.currentImageIndex;\r\n    }\r\n\r\n    get properties(){\r\n        return this.lightboxData.properties;\r\n    }\r\n\r\n    get images(){\r\n        return this.lightboxData.images || [this.lightboxData.image];\r\n    }\r\n\r\n    get thumbnailImage(){\r\n        return this.images[this.currentImageIndex].nativeElement;\r\n    }\r\n\r\n    get thumbnailImagePosition(){\r\n        return this.thumbnailImage.getBoundingClientRect();\r\n    }\r\n\r\n    // Image size if it is larger than the window size\r\n    get virtualImageDimension(){\r\n        let height = this.lightboxImageNaturalHeight;\r\n        let width = height * this.imageAspectRatio;\r\n        const windowWidth = document.body.clientWidth;\r\n        const windowHeight = window.innerHeight;\r\n\r\n        if (this.isImageLargerWindow){\r\n            if (height > windowHeight){\r\n                height = windowHeight;\r\n                width = height * this.imageAspectRatio;\r\n            } \r\n\r\n            if (width > windowWidth){\r\n                width = windowWidth;\r\n                height = width / this.imageAspectRatio;\r\n            }\r\n        } else {\r\n            width = this.lightboxImageNaturalWidth;\r\n            height = this.lightboxImageNaturalHeight;\r\n        }\r\n\r\n        if (width === 0 || Number.parseInt(height) === 0){\r\n            return {width: 200, height: 200};\r\n        }\r\n\r\n        return {width, height};\r\n    }\r\n\r\n    get containerInitialPosition(){\r\n        const scale =  (this.showState === 'initial-thumbnail-image') ? 1 : this.containerScale; \r\n        const top = this.thumbnailImagePosition.top;\r\n        const left = this.thumbnailImagePosition.left;\r\n        return 'matrix('+ scale +', 0, 0, '+ scale +','+ left +','+ top +')';\r\n    }\r\n\r\n    get containerFullscreenPosition(){\r\n        const left = (document.body.clientWidth - this.virtualImageDimension.width) / 2;\r\n        const top = (window.innerHeight - this.virtualImageDimension.height) / 2;\r\n\r\n        return 'translate3d('+ left +'px, '+ top +'px, 0)';\r\n    }\r\n\r\n    get containerScale(){\r\n        return this.thumbnailImagePosition.width / this.virtualImageDimension.width;\r\n    }\r\n\r\n    get imageAspectRatio(){\r\n        return this.thumbnailImage.naturalWidth / this.thumbnailImage.naturalHeight;\r\n    }\r\n\r\n    get isImageLargerWindow():boolean {\r\n        const imageNaturalWidth = this.lightboxImageNaturalWidth;\r\n        const imageNaturalHeight = this.lightboxImageNaturalHeight;\r\n        const windowWidth = document.body.clientWidth;\r\n        const windowHeight = window.innerHeight;\r\n        return imageNaturalWidth > windowWidth || imageNaturalHeight > windowHeight;\r\n    }\r\n\r\n    get isFirstImage(){\r\n        if (this.properties.loop){\r\n            return false;\r\n        } else {\r\n            return this.index === 0;\r\n        }\r\n    }\r\n\r\n    get isLastImage(){\r\n        if (this.properties.loop){\r\n            return false;\r\n        } else {\r\n            return this.index === this.latestImageIndex;\r\n        }        \r\n    }\r\n\r\n    get latestImageIndex(){\r\n        return this.images.length - 1;\r\n    }\r\n\r\n    get backgroundColor(){\r\n        const opacity = this.properties.backgroundOpacity;\r\n        const color = this.properties.backgroundColor;\r\n        if (color === 'black') {\r\n            return 'rgba(0, 0, 0, ' + opacity +')';\r\n        } else {\r\n            return 'rgba(255, 255, 255, ' + opacity +')';\r\n        }\r\n    }\r\n\r\n    get animationDuration(){\r\n        const animationDuration = this.properties.animationDuration;\r\n\r\n        if (typeof animationDuration === \"string\"){\r\n            return Number.parseInt(animationDuration);\r\n        } else {\r\n            return animationDuration;\r\n        }\r\n    }\r\n\r\n    get animationMode(){\r\n        if (this.currImageLoadingState === 'error'){\r\n            return 'default';\r\n        }\r\n        return this.properties.animationMode;\r\n    }\r\n\r\n    get animationTimingFunction(){\r\n        return this.properties.animationTimingFunction;\r\n    }\r\n\r\n    get closeButtonText(){\r\n        return this.properties.closeButtonText;\r\n    }\r\n\r\n    get counterSeparator(){\r\n        return this.properties.counterSeparator;\r\n    }\r\n\r\n    get counter(){\r\n        return this.currentImageIndex + 1 + this.counterSeparator + this.images.length;\r\n    }\r\n\r\n    constructor(public eventService: EventService){\r\n        this.isMobile = Utils.mobileCheck();\r\n    }\r\n\r\n    emitState(type, state){\r\n        if (state === 'initial-virtual-image' || \r\n            state === 'initial-styles'){\r\n            return;\r\n        }\r\n\r\n        if (state === 'initial-default' || \r\n            state === 'initial-thumbnail-image'){\r\n            state = 'initial';\r\n        }\r\n\r\n        this.eventService.emitChangeEvent({\r\n            type: type+':'+state\r\n        });\r\n    }\r\n\r\n    setShowState(state: ShowState){\r\n        this.showState = state;\r\n        this.emitState('show-state', state)\r\n    }\r\n\r\n    setClosingState(state: ClosingState){\r\n        this.closingState = state; \r\n        this.emitState('closing-state', state);\r\n    }\r\n\r\n    setAnimationDuration(){\r\n        this.hostStyleTransition = 'background-color '+this.animationDuration+'ms';\r\n        this.containerStyles.transition = 'all '+this.animationDuration+'ms '+this.animationTimingFunction;\r\n    }\r\n\r\n    setBackgroundColor(){\r\n        this.hostStyleBackgroundColor = this.backgroundColor;\r\n    }\r\n\r\n    getContainerHeight():string {\r\n        return this.thumbnailImagePosition.height / this.containerScale + 'px';\r\n    }\r\n\r\n    showThumbnailImage() {\r\n        this.thumbnailImage.style.opacity = '';\r\n    }\r\n\r\n    hideThumbnailImage(){\r\n        this.thumbnailImage.style.opacity = 0;\r\n    }\r\n\r\n    updateThumbnailPosition(){\r\n        this.containerStyles.transform = this.containerInitialPosition;\r\n    }\r\n} \r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, Input, EventEmitter, OnInit, HostBinding, HostListener, ViewChild, ViewChildren, ElementRef, ChangeDetectorRef, ContentChildren, QueryList } from '@angular/core';\nimport { LightboxData } from './interfaces';\nimport { ShowState, ClosingState } from './types';\nimport { EventService } from './event.service';\nimport { LightboxCommonComponent } from './lightbox-common.component';\n\n@Component({\n    selector: 'crystal-lightbox',\n    templateUrl: './lightbox.component.html',\n    styleUrls: ['./css/lightbox.component.sass']\n})\n\nexport class LightboxComponent extends LightboxCommonComponent {\n    prevIndex: number;\n    spinnerHeight: number = 30;\n    isZoomIn: boolean;\n    minTimeout: number = 30;\n    preloaderTimeout: number = 100;\n    spinnerStyles: any = {\n        transform: ''\n    };\n    configThumbnailPreloader = true;\n    events = new EventEmitter();\n\n    @HostBinding('class.lightbox-shown') hostShown: boolean = false;\n    @HostBinding('class.lightbox-hide-controls') hideControls: boolean = false;\n    @HostBinding('class.lightbox-animation') hostAnimation: boolean;\n    @HostBinding('class.lightbox-simple-mode')\n    get simpleMode(){\n        return this.properties.simpleMode;\n    }\n\n    @HostBinding('class.lightbox-light') get hostLightTheme(){\n        return this.properties.backgroundColor === 'white';\n    }\n\n    @HostBinding('style.backgroundColor') hostStyleBackgroundColor: string;\n\n    @ViewChild('prevImageElem') prevImageElem: ElementRef;\n    @ViewChild('lightboxContainer') lightboxContainerElem: ElementRef;\n\n    get currImagePath(){\n        let image = this.images[this.index];\n        let path;\n\n        if (!image){\n            return false;\n        }\n\n        if (image.fullImage && image.fullImage.path){\n            path =  image.fullImage.path;\n        } else if (image.thumbnailImage && image.thumbnailImage.path) {\n            path = image.thumbnailImage.path;\n        } else if (image.path){\n            path = image.path;\n        }\n\n        return path;\n    }\n\n    get prevImagePath(){\n        return this.images[this.prevIndex];\n    }\n\n    set prevImagePath(value: any){\n        this.images[this.prevIndex] = value;\n    }\n\n    get isHiddenPrevArrow(){\n        return this.isFirstImage && !this.properties.loop || this.isZoomIn;\n    }\n    get isHiddenNextArrow(){\n        return this.isLastImage && !this.properties.loop || this.isZoomIn;\n    }\n\n    get isPreloader(){\n        return this.animationMode === 'zoom-preloader' && \n           this.showState != 'animation-end' && \n           this.currImageLoadingState === 'loading';\n    }\n\n    get imageOrientation():'vertical' | 'horizontal' {\n        if (this.thumbnailImage.naturalWidth > this.thumbnailImage.naturalHeight){\n            return 'horizontal';\n        } else {\n            return 'vertical';\n        }\n    }\n\n    @HostListener('window:scroll') scrolling(){\n        if (this.showState === 'initial-thumbnail-image' ||\n            this.showState === 'initial-virtual-image' ||\n            this.closingState === 'animation'){\n            this.updateThumbnailPosition();\n        }\n    }\n\n    @HostListener('window:keydown', ['$event'])\n    onKeyDown(event: any) {\n        switch(event.key) {\n            case 'ArrowLeft':\n                this.prev();\n                break;\n            case 'ArrowRight':\n                this.next();\n                break;\n            case 'Escape':\n                this.closeLightbox();\n                break;\n        }\n    }\n\n    @HostListener(\"mouseenter\", ['$event'])\n    onMouseEnter(event: any) {\n        this.hideControls = false;\n    }\n\n    @HostListener('transitionend', ['$event'])\n    transitionEnd(event) {\n        if (event.propertyName === \"transform\" && this.hostAnimation){\n            this.hostAnimation = false;\n        }\n    }\n\n    constructor(\n        private elementRef: ElementRef, \n        private ref: ChangeDetectorRef,\n        public eventService: EventService){\n        super(eventService);\n    }\n\n    ngOnInit(){\n        this.currentImageIndex = this.properties.index;\n        this.initialLightbox();\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => {\n            if (this.currImageLoadingState === 'not-loaded'){\n                this.currImageLoadingState = 'loading';\n            }\n        }, this.preloaderTimeout);\n\n        // Mode: default\n        if (this.animationMode === 'default'){ \n            setTimeout(() => {\n                this.showLightboxAnimation();\n            }, this.minTimeout);\n        }\n    }\n\n    onImageLoaded(){\n        // When opening lightbox\n        if (this.animationMode === 'zoom-preloader' && \n            this.showState === 'initial-thumbnail-image'){\n            this.initialLightboxVirtualImage();\n            setTimeout(() => {\n                this.currImageLoadingState = 'uploaded';\n                this.showLightboxAnimation();\n                if (this.properties.hideThumbnail){\n                    this.hideThumbnailImage();\n                }\n            }, this.minTimeout);\n        }\n\n        // When opening next / previous image\n        if (this.showState === 'animation-end'){\n            this.currImageLoadingState = 'uploaded';\n            if (this.properties.hideThumbnail){\n                this.hideThumbnailImage();\n            }\n        }\n\n        this.ref.detectChanges();\n    }\n\n    onImageError(event){\n        this.currImageLoadingState = 'error';\n        this.initialLightboxDefault();\n\n        setTimeout(() => {\n            this.showLightboxAnimation();\n        }, this.minTimeout);\n    }\n\n    onContainerClick(event){\n        if (event.target === this.lightboxContainerElem.nativeElement || this.simpleMode){\n            this.closeLightbox();\n        }\n    }\n\n    initialLightbox(){\n        this.setMaxDimensions();\n        this.setAnimationDuration();\n\n        switch (this.animationMode) {\n            case 'zoom-preloader':\n                this.initialLightboxThumbnailImage();\n                break;\n            case 'default':\n                this.initialLightboxDefault();\n                break;\n        }\n    }\n\n    initialLightboxDefault(){\n        this.showState = 'initial-default';\n        this.containerStyles = {\n            transform: 'translate3d(0, 0, 0)',\n            height: '100%',\n            width: '100%',\n            opacity: '0'\n        }\n        // next step: AfterViewInit\n    }\n\n    initialLightboxVirtualImage(){\n        this.setShowState('initial-virtual-image');\n        this.containerStyles = {\n            transform: this.containerInitialPosition,\n            height: this.virtualImageDimension.height + 'px',\n            width: this.virtualImageDimension.width + 'px'\n        }\n        // next step: onImageLoaded() -> showLightboxAnimation()\n    }\n\n    initialLightboxThumbnailImage(){\n        this.setShowState('initial-thumbnail-image');\n        this.containerStyles = {\n            transform: this.containerInitialPosition,\n            height: this.thumbnailImagePosition.height + 'px',\n            width: this.thumbnailImagePosition.width + 'px'\n        }\n        // next step: onImageLoaded()\n    }\n\n    showLightboxAnimation(){\n        this.hostAnimation = true;\n        this.setShowState('animation');\n        this.hostShown = true;\n        this.setBackgroundColor();\n        this.setAnimationDuration();\n        \n        // Mode: zoom preloader\n        if (this.animationMode === 'zoom-preloader' &&\n            this.currImageLoadingState !== 'error'){ \n            this.containerStyles.transform = this.containerFullscreenPosition;\n        } \n\n        // Mode: default\n        if (this.animationMode === 'default'){\n            this.containerStyles.opacity = '1';\n        }\n        // next step: handleLightboxTransitionEnd\n    }\n\n    showLightboxAnimationEnd(){\n        this.setShowState('animation-end');\n        this.containerStyles = {\n            transform: 'translate3d(0, 0, 0)',\n            height: '100%',\n            width: '100%',\n        }\n    }\n\n    closeLightbox(){\n        this.setClosingState('initial');\n        this.hostShown = false;\n        this.closeLightboxInitial();\n    }\n\n    closeLightboxInitial(){\n        this.setClosingState('initial-styles');\n\n        // Mode: zoom preloader\n        if (this.animationMode === 'zoom-preloader'){\n            this.containerStyles = {\n                transform: this.containerFullscreenPosition,\n                height: this.virtualImageDimension.height + 'px',\n                width: this.virtualImageDimension.width + 'px',\n            }\n        }\n\n        // Mode: default\n        if (this.animationMode === 'default'){\n            this.containerStyles.opacity = '1';\n        }\n\n        setTimeout(() => {\n            this.closeLightboxAnimation();\n        }, this.minTimeout);\n    }\n\n    closeLightboxAnimation(){\n        this.setClosingState('animation');\n\n        // Mode: zoom preloader\n        if (this.animationMode === 'zoom-preloader'){\n            this.hostAnimation = true;\n            this.containerStyles = {\n                transform: this.containerInitialPosition,\n                height: this.getContainerHeight(),\n                width: this.getContainerWidth(),\n            }\n\n            this.hostStyleBackgroundColor = '';\n        }\n\n        // Mode: default\n        if (this.animationMode === 'default'){\n            this.hostAnimation = true;\n            this.containerStyles.opacity = '0';\n            this.hostStyleBackgroundColor = '';\n        }\n\n        this.setAnimationDuration();\n        // next step: handleLightboxTransitionEnd\n\n        if (this.animationDuration === 0){ // in the future, change to a type conversion getter\n            this.closeLightboxAnimationEnd();\n        }\n    }\n\n    closeLightboxAnimationEnd(){\n        this.setClosingState('animation-end');\n        this.events.emit({type: 'close'});\n\n        // Mode: zoom preloader\n        if (this.animationMode === 'zoom-preloader'){\n            this.showThumbnailImage();\n        }\n    }\n\n    /*\n     * Transition End\n     */\n\n    handleLightboxTransitionEnd(event){\n        if (this.showState === 'animation'){\n            this.showLightboxAnimationEnd();\n        }\n\n        // Last close step\n        if (this.closingState === 'animation'){\n            this.closeLightboxAnimationEnd();\n        }\n    }\n\n    next(){\n        if (this.animationMode === 'zoom-preloader'){\n            this.showThumbnailImage();\n        }\n\n        if (this.isLastImage){\n            if (this.properties.loop){\n                this.currentImageIndex = 0;\n            } else {\n                return;\n            }\n        } else {\n            this.currentImageIndex++;\n            this.currImageLoadingState = 'loading';\n        }\n\n        setTimeout(() => {\n            if (this.currImageLoadingState !== 'uploaded'){\n                this.currImageLoadingState = 'loading';\n            }\n        }, this.preloaderTimeout);\n    }\n\n    prev(){\n        if (this.animationMode === 'zoom-preloader'){\n            this.showThumbnailImage();\n        }\n\n        if (this.isFirstImage){\n            if (this.properties.loop){\n                this.currentImageIndex = this.latestImageIndex;\n            } else {\n                return;\n            }\n        } else {\n            this.currentImageIndex--;\n            this.currImageLoadingState = 'loading';\n        }\n\n        setTimeout(() => {\n            if (this.currImageLoadingState !== 'uploaded'){\n                this.currImageLoadingState = 'loading';\n            }\n        }, this.preloaderTimeout);\n    }\n\n    setMaxDimensions(){\n        this.lightboxImage.nativeElement.style.maxHeight = 'calc(' + this.properties.imageMaxHeight + ')';\n        this.lightboxImage.nativeElement.style.maxWidth = this.properties.imageMaxWidth;\n    }\n\n    handlePinchZoomEvents(event){\n        if (event.type === \"zoom-in\"){\n            this.isZoomIn = true;\n        }\n\n        if (event.type === \"zoom-out\"){\n            this.isZoomIn = false;\n        }\n    }\n\n    getContainerWidth():string {\n        return this.thumbnailImagePosition.width / this.containerScale + 'px';\n    }\n} ","export const DefaultProperties = {\n\tloop: false,\n\tindex: 0,\n\tcounter: false,\n\timageMaxHeight: \"100%\",\n\timageMaxWidth: \"100%\",\n\tanimationDuration: 350,\n\tanimationMode: 'zoom-preloader',\n\tanimationTimingFunction: 'cubic-bezier(0.475, 0.105, 0.445, 0.945)',\n\tcloseButtonText: 'Close',\n\tcounterSeparator: '/',\n\tdisable: false,\n\tsimpleMode: false,\n\tbackgroundColor: 'black',\n\tbackgroundOpacity: 1,\n\thideThumbnail: true,\n\tgestureEnable: false\n}","import { Injectable, Injector, ComponentFactoryResolver, EmbeddedViewRef, ApplicationRef, ComponentRef } from '@angular/core';\nimport { LightboxComponent } from './lightbox.component';\nimport { Properties, LightboxData } from './interfaces';\nimport { DefaultProperties } from './default-properties';\n\nexport interface AdComponent {\n\tlightboxData: LightboxData; \n\tevents: any;\n}\n\n@Injectable()\nexport class CrystalLightbox {\n\tisMobile: boolean;\n\t_defaultProperties: Properties;\n\n\tconstructor(\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate appRef: ApplicationRef,\n\t\tprivate injector: Injector){ \n\t}\n \n\tappendComponentToBody(component: any, lightboxData: LightboxData) {\t\t\n        const componentRef = this.componentFactoryResolver\n            .resolveComponentFactory(component)\n            .create(this.injector);\n\n\t\t(<AdComponent>componentRef.instance).lightboxData = lightboxData;\n\n\t\tthis.appRef.attachView(componentRef.hostView);\n\t\tconst domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n\t\t// Add to body\n\t\tdocument.body.appendChild(domElem);\n\t\t\n        (<AdComponent>componentRef.instance).events.subscribe((event) => {\n        \tif (event.type === 'close'){\n\t\t\t\tthis.appRef.detachView(componentRef.hostView);\n\t\t\t\tcomponentRef.destroy();\n\t\t\t}\n        });\n\t}\n\n\n\topen(lightboxData: LightboxData){\n\t\tlightboxData.properties = this.applyPropertieDefaults(DefaultProperties, lightboxData.properties);\n        let component = this.getLightboxComponent();\n\t\tthis.appendComponentToBody(component, lightboxData);\n\t}\n\n\tgetLightboxComponent(){\n\t\treturn LightboxComponent;\n\t}\n\n\tapplyPropertieDefaults(defaultProperties, properties){\n\t\tif (!properties) {\n\t\t\tproperties = {};\n\t\t}\n\n\t\tif (!properties.index){ \n\t\t\tproperties.index = 0;\n\t\t}\n\t\tthis._defaultProperties = Object.assign({}, defaultProperties);\n\t\treturn Object.assign(this._defaultProperties, properties);\n\t}\n}","import { Directive, ElementRef, Input, Output, HostListener, HostBinding, OnInit, EventEmitter } from '@angular/core';\nimport { EventService } from './event.service';\nimport { CrystalLightbox } from'./lightbox.service';\nimport { Properties, ImageExtended, Image } from './interfaces';\n\n@Directive({\n    selector: '[lightbox]'\n})\n\nexport class LightboxDirective {\n\n    globalEventsSubscription;\n    image: ImageExtended;\n    @Input() fullImage: Image;\n    @Input() properties: Properties = {};\n    @Input() loop: boolean;\n    @Input() backgroundOpacity: number;\n    @Input() counter: boolean;\n    @Input() imageMaxHeight: string;\n    @Input() imageMaxWidth: string;\n    @Input() animationDuration: number;\n    @Input() animationMode: 'default' | 'zoom' | 'zoom-blur' | 'zoom-preloader' | 'opacity' | 'none'; \n    @Input() animationTimingFunction: string;\n    @Input() closeButtonText: string;\n    @Input() counterSeparator: string;\n    @Input() disable: boolean;\n    @Input() simpleMode: boolean;\n    @Input() backgroundColor: 'black' | 'white';\n    @Input() hideThumbnail: boolean;\n    @Input() gestureEnable: boolean;\n\n    @Output() events: EventEmitter<any> = new EventEmitter<any>();\n\n    @HostBinding('class.lightbox-single') hostLightboxGroup: boolean = true;\n    @HostBinding('class.lightbox-simple-mode') \n    get hostSimpleMode(){\n        return this.simpleMode;\n    }\n\n    get isGroupImage():boolean {\n        return this.elementRef.nativeElement.closest(\".lightbox-group\");\n    }\n\n    constructor( \n        private lightbox: CrystalLightbox, \n        private eventService: EventService,\n        private elementRef: ElementRef) {\n        this.globalEventsSubscription = this.eventService.emitter.subscribe(\n            (event) => {\n                this.handleGlobalEvents(event);\n            }\n        );\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event){\n        if (this.disable){\n            return;\n        }\n\n        if (this.isGroupImage){\n            this.eventService.emitChangeEvent({\n                type: 'thumbnail:click',\n                elementRef: this.elementRef,\n                properties: this.properties\n            });\n        } else {\n            this.image = this.getImage();\n\n            this.lightbox.open({\n                images: [this.image],\n                properties: this.properties,\n                index: 0\n            });\n        }\n    }\n\n    ngOnChanges(changes) {\n        this.properties = this.getProperties(changes);\n    }\n\n    handleGlobalEvents(event){\n        this.events.emit(event);\n    }\n\n    getImage(){\n        let image: ImageExtended = {};\n        const nativeElement = this.elementRef.nativeElement;\n\n        if (this.fullImage){\n            image.fullImage = this.fullImage;\n        }\n\n        image.thumbnailImage = {\n            path: nativeElement.src,\n            height: nativeElement.naturalHeight,\n            width: nativeElement.naturalWidth\n        }\n\n        image.nativeElement = nativeElement;\n        return image;\n    };\n\n    getProperties(changes){\n        let properties = {};\n\n        for (var prop in changes) {\n            if (prop !== 'fullImage'){\n                properties[prop] = changes[prop].currentValue;\n            }\n        }\n        return properties;\n    }\n}\n","import { Directive, HostBinding, ContentChildren, QueryList, ElementRef } from '@angular/core';\nimport { EventService } from './event.service';\nimport { LightboxDirective } from'./lightbox.directive' \nimport { CrystalLightbox } from'./lightbox.service';\nimport { Properties, ImageExtended } from './interfaces';\n\n@Directive({\n    selector: '[lightbox-group]'\n})\n\nexport class LightboxGroupDirective {\n    thumbnailImageElement;\n    thumbnailLightboxDirective: LightboxDirective;\n    thumbnailImageIndex: number;\n    thumbnailImages = [];\n    images = [];\n    properties: Properties = {}; \n    globalEventsSubscription;\n\n    get lightboxDirectiveList(){\n        if (this._lightboxDirectiveList){\n            return this._lightboxDirectiveList.toArray();\n        } else {\n            return [];\n        }\n    }\n\n    @HostBinding('class.lightbox-group') hostLightboxGroup: boolean = true;\n    @ContentChildren(LightboxDirective, {descendants: true}) _lightboxDirectiveList: QueryList<LightboxDirective>; \n    constructor(\n        private eventService: EventService,\n        private lightbox: CrystalLightbox) {\n\n        this.globalEventsSubscription = this.eventService.emitter.subscribe(\n            (event) => {\n                this.handleGlobalEvents(event); \n            }\n        );\n    }\n\n    handleGlobalEvents(event){\n        if (event.type === 'thumbnail:click'){\n            this.thumbnailImageElement = event.elementRef.nativeElement;\n            this.thumbnailImages = this.getThumbnailImages();\n            this.thumbnailImageIndex = this.getThumbnailImageIndex(this.thumbnailImageElement);\n\n            if (this.thumbnailImageIndex == undefined){\n                return;\n            }\n\n            this.thumbnailLightboxDirective = this.getThumbnailLightboxDirective(this.thumbnailImageIndex);\n            this.images = this.getImages();\n            this.properties = event.properties;\n            this.properties.index = this.thumbnailImageIndex;\n\n            this.lightbox.open({\n                images: this.images,\n                //index: this.thumbnailImageIndex,\n                properties: this.properties\n            });\n        }\n    }\n\n    getThumbnailImageIndex(element){\n        const images = this.thumbnailImages;\n        for (var i = 0; i < images.length; i++) {\n            if (element === images[i]){\n                return i;\n            }\n        }\n    }\n\n    getThumbnailLightboxDirective(index){\n        return this.lightboxDirectiveList[index];\n    }\n\n    getThumbnailImages(){\n        let thumbnailImages = [];\n        this.lightboxDirectiveList.forEach(el => {\n            thumbnailImages.push(el['elementRef'].nativeElement);\n        });\n        return thumbnailImages;\n    }\n\n    getImages(){\n        let images = [];\n        this.lightboxDirectiveList.forEach(el => {\n            let image: ImageExtended = {};\n            const nativeElement = el['elementRef'].nativeElement;\n\n            if (el.fullImage){\n                image.fullImage = el.fullImage;\n            }\n\n            image.thumbnailImage = {\n                path: nativeElement.src,\n                height: nativeElement.naturalHeight,\n                width: nativeElement.naturalWidth\n            }\n\n            image.nativeElement = nativeElement;\n            images.push(image);\n        });\n\n        return images;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LightboxCommonComponent } from './lightbox-common.component';\nimport { LightboxComponent } from './lightbox.component';\nimport { CrystalLightbox } from'./lightbox.service' \nimport { EventService } from './event.service';\nimport { LightboxDirective } from'./lightbox.directive';\nimport { LightboxGroupDirective } from'./lightbox-group.directive';\n\n@NgModule({\n    declarations: [\n        LightboxCommonComponent,\n        LightboxComponent,\n        LightboxDirective,\n        LightboxGroupDirective\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        LightboxDirective,\n        LightboxGroupDirective\n    ],\n    providers: [\n        CrystalLightbox,\n        EventService\n    ],\n    bootstrap: [\n        \n    ],\n    entryComponents: [\n        LightboxComponent\n    ]\n})\nexport class CrystalLightboxModule { }\n"]}