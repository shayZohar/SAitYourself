import { EventEmitter, ElementRef, ChangeDetectorRef } from '@angular/core';
import { EventService } from './event.service';
import { LightboxCommonComponent } from './lightbox-common.component';
export declare class LightboxComponent extends LightboxCommonComponent {
    private elementRef;
    private ref;
    eventService: EventService;
    prevIndex: number;
    spinnerHeight: number;
    isZoomIn: boolean;
    minTimeout: number;
    preloaderTimeout: number;
    spinnerStyles: any;
    configThumbnailPreloader: boolean;
    events: EventEmitter<{}>;
    hostShown: boolean;
    hideControls: boolean;
    hostAnimation: boolean;
    readonly simpleMode: boolean;
    readonly hostLightTheme: boolean;
    hostStyleBackgroundColor: string;
    prevImageElem: ElementRef;
    lightboxContainerElem: ElementRef;
    readonly currImagePath: any;
    prevImagePath: any;
    readonly isHiddenPrevArrow: boolean;
    readonly isHiddenNextArrow: boolean;
    readonly isPreloader: boolean;
    readonly imageOrientation: 'vertical' | 'horizontal';
    scrolling(): void;
    onKeyDown(event: any): void;
    onMouseEnter(event: any): void;
    transitionEnd(event: any): void;
    constructor(elementRef: ElementRef, ref: ChangeDetectorRef, eventService: EventService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    onImageLoaded(): void;
    onImageError(event: any): void;
    onContainerClick(event: any): void;
    initialLightbox(): void;
    initialLightboxDefault(): void;
    initialLightboxVirtualImage(): void;
    initialLightboxThumbnailImage(): void;
    showLightboxAnimation(): void;
    showLightboxAnimationEnd(): void;
    closeLightbox(): void;
    closeLightboxInitial(): void;
    closeLightboxAnimation(): void;
    closeLightboxAnimationEnd(): void;
    handleLightboxTransitionEnd(event: any): void;
    next(): void;
    prev(): void;
    setMaxDimensions(): void;
    handlePinchZoomEvents(event: any): void;
    getContainerWidth(): string;
}
