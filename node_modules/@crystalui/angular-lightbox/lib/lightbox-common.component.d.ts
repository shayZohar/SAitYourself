import { ElementRef } from '@angular/core';
import { LightboxData, Properties } from './interfaces';
import { ShowState, ClosingState } from './types';
import { EventService } from './event.service';
export declare class LightboxCommonComponent {
    eventService: EventService;
    currentImageIndex: number;
    indexCurrentSlide: number;
    showState: ShowState;
    closingState: ClosingState;
    containerStyles: any;
    currImageLoadingState: 'not-loaded' | 'loading' | 'uploaded' | 'error';
    isMobile: boolean;
    lightboxData: LightboxData;
    hostStyleBackgroundColor: string;
    hostStyleTransition: string;
    _imageFirst: ElementRef;
    _imageSecond: ElementRef;
    _imageLast: ElementRef;
    _lightboxImage: ElementRef;
    readonly lightboxImage: ElementRef<any>;
    readonly lightboxImageElement: any;
    readonly lightboxImageNaturalHeight: any;
    readonly lightboxImageNaturalWidth: any;
    readonly index: number;
    readonly properties: Properties;
    readonly images: any;
    readonly thumbnailImage: any;
    readonly thumbnailImagePosition: any;
    readonly virtualImageDimension: {
        width: number;
        height: any;
    };
    readonly containerInitialPosition: string;
    readonly containerFullscreenPosition: string;
    readonly containerScale: number;
    readonly imageAspectRatio: number;
    readonly isImageLargerWindow: boolean;
    readonly isFirstImage: boolean;
    readonly isLastImage: boolean;
    readonly latestImageIndex: number;
    readonly backgroundColor: string;
    readonly animationDuration: number;
    readonly animationMode: "opacity" | "zoom" | "none" | "default" | "zoom-blur" | "zoom-preloader";
    readonly animationTimingFunction: string;
    readonly closeButtonText: string;
    readonly counterSeparator: string;
    readonly counter: string;
    constructor(eventService: EventService);
    emitState(type: any, state: any): void;
    setShowState(state: ShowState): void;
    setClosingState(state: ClosingState): void;
    setAnimationDuration(): void;
    setBackgroundColor(): void;
    getContainerHeight(): string;
    showThumbnailImage(): void;
    hideThumbnailImage(): void;
    updateThumbnailPosition(): void;
}
